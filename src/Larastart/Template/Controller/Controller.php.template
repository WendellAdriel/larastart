<?php
/** Larastart
 *
 * (The MIT license)
 * Copyright (c) 2017 andrealeixo.com
 */

namespace App\Http\Controllers;

use App\!!modelName!!;
use Illuminate\Http\Request;
use App\Http\Requests\!!storeRequestName!!;

class !!className!! extends Controller {

    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function getAll()
    {
        return !!modelName!!::paginate();
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function getById($id)
    {
        $resource = !!modelName!!::find($id);
        if ($resource === null) {
            abort(404, "Resource not found");
        }
        return $resource;
    }

    /**
     * Process post to store.
     *
     * @return Response
     */
    public function store(!!storeRequestName!! $request)
    {
        $model = new !!modelName!!;
        return $this->handleSave($request, $model);

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function update($id, !!storeRequestName!! $request)
    {
        $model = !!modelName!!::find($id);
        if ($model === null) {
            abort(404, "Resource not found");
        }
        return $this->handleSave($request, $model);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function destroy($id)
    {
        $resource = !!modelName!!::find($id);
        if ($resource === null) {
            abort(404, "Resource not found");
        }
        return $resource->delete();
    }

    protected function handleSave(!!storeRequestName!! $request, $model)
    {
        try {
            $intention = $model->id ? 'updated' : 'created';
            !!modelStore!!
            $model->save();
            if ($model->save()) {
                return response([
                    'url' => '/author/'.$model->id,
                    'message' => 'Resource ' . $intention,
                ], $model->id ? 200 : 201);
            }
            throw new \Exception("Resource not " . $intention);
        } catch (\Exception $ex) {
            abort(500, $ex->getMessage());
        }
    }
}
